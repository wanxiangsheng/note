常量 变量

            8 比特 等于1字节  1字节 为1B  或者1byte
            cd\ 磁盘根目录
            cls 清屏

            标识符 类、方法、变量名称 统称为标识符
                        标识符可以用  字母 数字 下划线跟$ 开头
                        类： 大驼峰
                        方法 ： 小驼峰
                        变量  ： 全小写
            数据类型：分为两类
                    基本数据  整数 浮点 字符 布尔
                    引用数据   类  数组 接口
                    byte  short(短整型) int long float double char boolean

数据类型转换、运算符、方法
            自动转换   取值范围小的自动转取值范围大的
                        byte、short、char、自动提升int
                        byte、short、char‐‐>int‐‐>long‐‐>float‐‐>double
             强制转换   （int）

            运算符
                算数运算符   +  -  *  /  %  ++   ——
                赋值运算符        =  +=  -= *=  /= %=
                比较运算符    == < >  <= >=  !=
                逻辑运算符   &&（短路与）  ||（短路或）  ！（取反）
                三元运算符    数据类型 变量名 = 布尔类型表达式？结果1：结果2

                方法定义注意事项：
                方法必须定义在一类中方法外
                方法不能定义在另一个方法的里面

                += 符号的扩展
                             s = (short)(s + 1) 带有强制转换的特点

  流程控制语句
                    switch(表达式) {
                  case 常量值1:
                    语句体1;
                    break;
                  case 常量值2:
                    语句体2;
                    break;
                  ...
                  default:
                    语句体n+1;
                    break;
                      }

                  循环    for
                            for(初始化表达式①; 布尔表达式②; 步进表达式④){
                            循环体③        
                            }

                             while(布尔表达式②){
                                循环体③
                                步进表达式④
                            }
                            初始化表达式①
                                do{
                                循环体③
                                步进表达式④
                            }while(布尔表达式②);

                  break 终止 switch或者循环
                   continue  结束本次循环，继续下一次的循环

            idea 方法
                        Alt+Enter 导入包，自动修正代码
                        Ctrl+Y 删除光标所在行
                        Ctrl+D 复制光标所在行的内容，插入光标位置下面
                        Ctrl+Alt+L 格式化代码
                        Ctrl+/ 单行注释
                        Ctrl+Shift+/ 选中代码注释，多行注释，再按取消注释
                        Alt+Ins 自动生成代码，toString，get，set等方法
                        Alt+Shift+ 上下箭头 移动当前代码行
                IDEA 修改快捷键
                  File ->Settings->keymap->Main menu->code->Completion->Basic
                   Basic ->remove->Ctrl+空格
                    Basic ->Add Keyboard->键入 Alt+/->点击OK

数组
            定义数组格式：
                    1  数组存储的数据类型[] 数组名字 = new 数组存储的数据类型[长度];
                    2   数据类型[] 数组名 = new 数据类型[]{元素1,元素2,元素3...};
                    3  数据类型[] 数组名 = {元素1,元素2,元素3...};
                    数组有定长特性，长度一旦指定，不可更改。
             数组的访问
                        数组的长度属性：    数组名 .length
                索引访问数组中的元素
                       数组名 [索引]=数值，为数组中的元素赋值
                       变量 =数组名[索引]，获取出数组中的元素
              JVM 的内存划分：
                     寄存器 给CPU使用，和我们开发无关。
                     本地方法栈 JVM在使用操作系统功能的时候使用，和我们开发无关。
                     方法区 存储可以运行的class文件。
                     堆内存 存储对象或者数组，new来创建的，都存储在堆内存。
                     方法栈 方法运行时使用的内存，比如main方法运行，进入方法栈中执行。
             数组反转
                     for (int min = 0, max = arr.length ‐ 1; min <= max; min++, max‐‐) {
                           //利用第三方变量完成数组中的元素交换
                           int temp = arr[min];
                           arr[min] = arr[max];
                           arr[max] = temp;
                         }
